name: Analysis Security
inputs:
  github-token:
    description: "GITHUB_TOKEN"
    required: false
    default: ""
  bandit-yml-path:
    description: "bandit-yml file's path"
    required: false
    # default: ""
    default: "bandit.yaml"

runs:
  using: "composite"
  steps:
    - name: Install dependencies Linter
      run: |
        python --version

        python -m pip install --upgrade pip
        pip install flake8

        pip install bandit
        pip install dlint

        echo ${{ inputs.github-token }}
      shell: bash

    - name: Packj Security Audit
      if: inputs.github-token != ''
      uses: ossillate-inc/packj-github-action@v0.0.8-beta
      with:
        DEPENDENCY_FILES: pypi:requirements.txt
        REPO_TOKEN: ${{ inputs.github-token }}

    - name: Security Bandit
      if: inputs.bandit-yml-path == ''
      run: |
        bandit -r ./ >> ./.security.log
      shell: bash

    - name: Security Bandit (setting file)
      if: inputs.bandit-yml-path != ''
      run: |
        echo ${{ inputs.bandit-yml-path }}
        bandit -c ${{ inputs.bandit-yml-path }} -r ./ >> ./.security.log
      shell: bash

    - name: Security Dlint
      run: |
        flake8 --statistics --select=DUO >> ./.security.log
      shell: bash

    - if: failure() && inputs.github-token != ''
      run: |
        URL=${{ github.event.pull_request.html_url }}
        GITHUB_TOKEN=${{ inputs.github-token }}

        echo "\n" >> ./.security.log
        echo "# Security \n" >> ./.metrics.log
        echo "https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}" >> ./.security.log

        echo $URL
        echo $GITHUB_TOKEN
        cat ./.security.log

        gh pr comment --body-file ./.security.log "${URL}"
      shell: bash
